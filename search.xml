<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>algolia-error</title>
      <link href="/2018/08/21/algolia-error/"/>
      <url>/2018/08/21/algolia-error/</url>
      <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天更新Algolia索引的的时候，报错了：<br><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-08-21-13-23-48.png" alt="2018-08-21-13-23-48"></p><p>查了一下免费账户单个索引大小只能在10K以下，这是官网的说明：<br><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-08-21-13-24-55.png" alt="2018-08-21-13-24-55"></p><p>这就尴尬了，赶紧找找解决方案：</p><p>在项目根目录 <code>node_modules</code>下面找 <code>hexo-aloglia-&gt;lib-&gt;commond.js</code></p><p>把这句代码改一下，目前好像也没有其他更好的办法，将就着用。<br><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-08-21-13-28-01.png" alt="2018-08-21-13-28-01"></p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Algolia </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ThinkPHP5 导出CSV</title>
      <link href="/2018/08/21/exportcsv/"/>
      <url>/2018/08/21/exportcsv/</url>
      <content type="html"><![CDATA[<h3 id="问题背景："><a href="#问题背景：" class="headerlink" title="问题背景："></a>问题背景：</h3><p>这两天项目有导出数据的需求，本来使用的是<code>bootstrap-table</code> 表格导出插件完成的，不过业务数据稍大一点（5K条以上)就比较卡了，如果电脑性能差一点的话，浏览器经常被卡死，所以想着得换成后台导出才行。</p><p>后台导出一般有两种方式：</p><ul><li>使用<code>PHPEXCEL</code>导出</li><li>自己导出CSV格式</li></ul><a id="more"></a><p>先用了一下PHPEXCEL，但是马上发现，这玩意资源占用率较高，导出1W+以上的数据就卡死了，网上查了一下说，一个单元格大概要占用1K的资源，虽然有一些参数可以做优化，不过懒的折腾了，直接换成自己写CSV了</p><p>自己写了个方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs undefined">if(!function_exists(&apos;exportCsv&apos;))&#123;<br>    function exportCsv($header,$model,$where)&#123;<br>        set_time_limit(0);<br>        header(&apos;Content-Type: application/vnd.ms-excel&apos;);<br>        header(&apos;Content-Disposition: attachment;filename=&quot;data.csv&quot;&apos;);<br>        header(&apos;Cache-Control: max-age=0&apos;);<br><br><br>        // 打开PHP文件句柄，php://output 表示直接输出到浏览器<br>        $fp = fopen(&apos;php://output&apos;, &apos;a&apos;);<br><br>        foreach($header as $v)&#123;<br>            $head[] = iconv(&quot;utf-8&quot;,&quot;GBK//IGNORE&quot;,$v[&apos;name&apos;]);<br>        &#125;<br><br>        fputcsv($fp, $head);<br>        $offset = 0;<br>        $limit = 5000;<br>        $count = $model-&gt;where($where)-&gt;count();<br>        $cnt = 0;<br>        for($i=0;$i&lt;ceil($count/$limit);$i++)&#123;<br>            $data = $model-&gt;where($where)-&gt;limit($offset,$limit)-&gt;select();<br>            try&#123;<br>                $list = collection($data)-&gt;toArray();<br>            &#125;catch(\Exception $e)&#123;<br>                p($e-&gt;getMessage());<br>            &#125;<br><br><br>            foreach($list as $v)&#123;<br>                $cnt++;<br>                $item = [];<br>                foreach($header as $h)&#123;<br>                    $value = $v[$h[&apos;field&apos;]];<br>                    $item[] = iconv(&quot;utf-8&quot;,&quot;GBK//IGNORE&quot;,$value);<br>                &#125;<br>                fputcsv($fp,$item);<br>            &#125;<br>            $offset = $offset+$limit;<br>            if($cnt == $limit)&#123;<br>                ob_flush();<br>                flush();<br>                $cnt = 0;<br>            &#125;<br>        &#125;<br>        fclose($fp);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p><p>控制器方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/**<br> * php报表导出<br> */<br>public function exportOrderExcel()&#123;<br>    //设置过滤方法<br>    $this-&gt;request-&gt;filter([&apos;strip_tags&apos;]);<br>    list($where, $sort, $order, $offset, $limit) = $this-&gt;buildparams();<br>    //这个不用管 这是我根据前端参数自动组装sql条件的方法<br><br>    //设置表头<br>    $header = [<br>        [&quot;field&quot;=&gt;&quot;tid&quot;,&quot;name&quot;=&gt;&quot;订单编号&quot;],<br>        [&quot;field&quot;=&gt;&quot;goods_id&quot;,&quot;name&quot;=&gt;&quot;商品ID&quot;],<br>        [&quot;field&quot;=&gt;&quot;goods_title&quot;,&quot;name&quot;=&gt;&quot;商品名称&quot;],<br>        [&quot;field&quot;=&gt;&quot;order_state_text&quot;,&quot;name&quot;=&gt;&quot;订单状态&quot;],<br>        [&quot;field&quot;=&gt;&quot;pay_state_text&quot;,&quot;name&quot;=&gt;&quot;支付状态&quot;],<br>        [&quot;field&quot;=&gt;&quot;pay_time&quot;,&quot;name&quot;=&gt;&quot;付款时间&quot;],<br>        [&quot;field&quot;=&gt;&quot;goods_num&quot;,&quot;name&quot;=&gt;&quot;销售数量&quot;],<br>        [&quot;field&quot;=&gt;&quot;goods_price&quot;,&quot;name&quot;=&gt;&quot;销售价&quot;],<br>        [&quot;field&quot;=&gt;&quot;goods_price&quot;,&quot;name&quot;=&gt;&quot;成本价&quot;],<br>        [&quot;field&quot;=&gt;&quot;create_time&quot;,&quot;name&quot;=&gt;&quot;下单时间&quot;],<br>        [&quot;field&quot;=&gt;&quot;use_date&quot;,&quot;name&quot;=&gt;&quot;使用日期&quot;],<br>    ];<br><br>    exportCsv($header,$this-&gt;model,$where);<br>    //$this-&gt;model是 模型，$where 是条件<br><br>&#125;<br></code></pre></td></tr></table></figure><p>所有的数据格式化，都是用THINKPHP5 模型的格式化方法来处理完成的。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs undefined">class ReportProduct extends BaseModel<br>&#123;<br>    // 表名<br>    protected $table = &apos;view_report_product_detail&apos;;<br>    <br>    // 自动写入时间戳字段<br>    protected $autoWriteTimestamp = false;<br><br>    // 定义时间戳字段名<br>    protected $createTime = false;<br>    protected $updateTime = false;<br>    <br>    // 追加属性<br>    protected $append = [&apos;pay_state_text&apos;,&apos;product_state_text&apos;];<br><br>    public function getPayStateTextAttr($value,$data)&#123;<br>        $value = $value?$value:$data[&apos;pay_state&apos;];<br>        return getOrderCode()[$value];<br>    &#125;<br><br>    public function getProductStateTextAttr($value,$data)&#123;<br>        $value = $value?$value:$data[&apos;product_state&apos;];<br>        return getOrderProductCode()[$value];<br>    &#125;<br><br>    public function getProductCostPriceAttr($value)&#123;<br>        return sprintf(&apos;%.2f&apos;,intval($value)/100);<br>    &#125;<br>    public function getTidAttr($value)&#123;<br>        return &apos;TID:&apos;.$value;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> THINKPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> THINKPHP5 </tag>
            
            <tag> PHP </tag>
            
            <tag> CSV </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo使用七牛云做图床</title>
      <link href="/2018/07/28/qiniu/"/>
      <url>/2018/07/28/qiniu/</url>
      <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>Hexo写博客，贴图是个比较DT的问题，MarkDown语法放置图片本来就不是很方便，而且图片全放Gitpage的话，太占空间，而且万一以后要迁移博客的话，这么多图片占的空间大，迁移费时。</p><p>所以用七牛云存储来放置博客图片还是比较稳妥的，个人用户每个月有免费10G的空间，写写博客的话也完全够了的。</p><h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><h3 id="申请账户"><a href="#申请账户" class="headerlink" title="申请账户"></a>申请账户</h3><p><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云官网</a> 申请一个账户，还是比较简单的，要上传手持身份证的照片进行认证一下，一般一两天就能通过了。</p><a id="more"></a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>进入对象存储</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-10-56-34.png" alt="2018-07-28-10-56-34"></p><p>选择新建存储空间，填写存储空间名字，选择区域（这个区域选择之后，以后不能修改），访问控制，选择公开空间。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-10-57-44.png" alt="2018-07-28-10-57-44"></p><p>配置好之后，可以看到下面的界面，右侧有一个测试域名，这是你空间的域名</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-10-59-42.png" alt="2018-07-28-10-59-42"></p><p>我们选择内容管理即可进行图片上传了</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-01-21.png" alt="2018-07-28-11-01-21"></p><p>可以一次上传多张，上传完成之后，即可看到图片列表，在操作那一栏可以查看图片外链</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-02-12.png" alt="2018-07-28-11-02-12"></p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-03-23.png" alt="2018-07-28-11-03-23"></p><p>在MarkDown文件中,贴图格式是：<code>![img_desc](url)</code>，img_desc是图片描述或名字，url是图片地址</p><h3 id="图片上传插件"><a href="#图片上传插件" class="headerlink" title="图片上传插件"></a>图片上传插件</h3><p>上一步中图片的存储空间已经解决，问题是每次这样上传图片也太麻烦了，可以借助插件来解决。</p><p>编辑器我们采用微软的Vscode，打开编辑器左侧的这个按钮，或者按<code>Ctrl+Shift+X</code>打开扩展</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-09-30.png" alt="2018-07-28-11-09-30"></p><p>输入qiniu我们看到有3个关于qiniu的插件，选择paste image to qiniu 安装</p><p>安装完毕之后，我们来进行插件的配置：</p><p>打开 文件-&gt;首选-&gt;设置</p><p>找到扩展中pasteImageToQiniu配置项</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-21-21.png" alt="2018-07-28-11-21-21"></p><p>进行配置</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-20-42.png" alt="2018-07-28-11-20-42"></p><p>Access_key 和 Secret_key 的值在七牛云的 个人面板 秘钥管理中</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/2018-07-28-11-22-55.png" alt="2018-07-28-11-22-55"></p><p>注意一下七牛图床域名前面一定要加 http://哦 要不然有问题的。</p><h3 id="愉快的玩耍"><a href="#愉快的玩耍" class="headerlink" title="愉快的玩耍"></a>愉快的玩耍</h3><p>现在可以快速截图贴图了，QQ的截图快捷键 <code>Ctrl+Shift+A</code> 截好图，然后 <code>Ctrl+Alt+V</code> 就自动上传了并且会自动帮你把图片链接在md中写好，是不是很方便？</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 七牛云图床 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树莓派配合Openmediavault搭建媒体中心</title>
      <link href="/2018/07/26/openmediavault/"/>
      <url>/2018/07/26/openmediavault/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.openmediavault.org/" target="_blank" rel="noopener">OpenMediaVault</a>，是一个开源的基于Debian Linux的下一代网络附加存储(NAS)解决方案。</p><p>树莓派本身功耗小，用来安装这个再好不过。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装-Openmediavault-系统"><a href="#安装-Openmediavault-系统" class="headerlink" title="安装 Openmediavault 系统"></a>安装 Openmediavault 系统</h3><p>点击 <a href="https://sourceforge.net/projects/openmediavault/files/" target="_blank" rel="noopener">这里</a> 进行下载系统，我们选择 <code>Raspberry Pi images</code> 文件夹，下载这个：<code>OMV_4_Raspberry_Pi_2_3_3Plus.img.xz</code> </p><p>然后在下面的文档里面我们看到：</p><a id="more"></a><p><code>Do not decompress but write the .img.xz image in a single step using Etcher to SD card: https://etcher.io</code></p><p>意思是不要解压，使用 <code>https://etcher.io</code>下载的工具烧录SD卡。</p><p>这个工具打开界面就是这样，选择你刚刚下载的 .xz 文件，然后选择你的SD卡，点击 Flash 就好了，比较慢，大概要十分钟。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/etcher.png" alt="Etcher"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>把SD卡插上树莓派，插上网线！插上网线！插上网线！重要的事情说三遍，默认不支持无线连接，所以一定要插网线，要不然获取不到IP，连上显示器，你会看到界面有一行显示了本机IP，记下来。然后发现报了好几个错误：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-err.png" alt="ovm-err">;</p><p>前面的错误不用管，重点是看到 <code>Failed to start A high performance web server and a reverse proxy</code> Nginx 启动失败了，这是因为Nginx配置中有个地方有问题，我们需要手动修改一下。</p><p>使用 <code>root/openmediavault</code> 登录进去</p><p><code>vim /etc/nginx/sites-enable/openmediavault-webgui</code></p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-nginx-err.png" alt="ovm-nginx-err"></p><p>把 <code>listen []:80 ipv6only=off</code> 变成：</p><p><code>listen 80 ipv6only=off</code> 就可以了。</p><p><code>systemctl restart nginx</code> 重启一下Nginx 就可以了。</p><h3 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h3><p>在浏览器中（一定要非IE内核的，Firefox、Chrom、Safari、或者国产浏览器的极速模式）输入树莓派的IP，即可打开后台，如果不知道IP的话，安卓有一款局域网扫描软件安利一下：Fing，google 商店可以下载,扫一下就能看到局域网中Raspberry的IP</p><p>PS：管理后台对安卓手机（测试：小米6自带浏览器和QQ浏览器）不太友好，要修改一下安卓浏览器的UA标识（在浏览器设置里），改成iPAD就行了</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-login.png" alt="ovm-login"></p><p>用户名和密码默认是 <code>admin/openmediavault</code></p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-main.jpg" alt="ovm-main"></p><h4 id="常规配置"><a href="#常规配置" class="headerlink" title="常规配置"></a>常规配置</h4><p>设置一下自动登出时间，Web管理员密码</p><h4 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h4><p>设置一下时区，选择 Asia/Shanghai</p><h4 id="插件和-OMV-Extras"><a href="#插件和-OMV-Extras" class="headerlink" title="插件和 OMV-Extras"></a>插件和 OMV-Extras</h4><p>OMV-Extras 我开了下面这几个：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-extras.png" alt="omv-extras"></p><p>在插件中 点击 <code>检查</code> 先更新一下，然后根据自己的需要选择性的安装就好了。</p><p>我主要安装的几个插件：</p><ul><li><p>Teamviewer<br>&emsp;&emsp;如果ssh有问题挂了，这是能连接你树莓派的最后方式，一定要装，虽然速度慢的想骂人，开启之后有一个id，然后你配置一下密码，其他Teamviewer客户端 输入ID和密码之后就可以连接了，还是挺方便的</p></li><li><p>transmissionbt<br>&emsp;&emsp;Bt下载的，还有一个downloader下载插件不太好使，没有下载速率和进度，所以我不太用，Bt下载速率跟种子有很大关系，国内的我找过好多种子都没速度，安利一下一个BT站点：<a href="https://thepiratebay.org/" target="_blank" rel="noopener">海盗湾</a> 还是可以的</p></li><li><p>Plex<br>&emsp;&emsp;家庭影音媒体系统，这个非常好使，自动的帮你匹配电影海报等信息，展示的方式跟各大视频APP差不多，而且同一账号多端可以共享（TV版的好像要花钱，不过可以Kodi+plex插件替代）</p></li></ul><p>其他插件，看你自己的需求了。</p><h4 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h4><p>首先进行磁盘挂载，我的是NTFS的1T硬盘，系统能识别，但是无法挂载，挂载的时候报错，提示 <code>没有fuse这个模块</code>,查了一下发现是 内核的问题，需要升级树莓派内核。</p><p>使用下面的语句解决（速度相当慢）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">sudo apt-get install --reinstall raspberrypi-bootloader raspberrypi-kernel <br>sudo apt-get update<br></code></pre></td></tr></table></figure><p>好了然后可以正常挂载了。</p><p>选中磁盘可以进行相关属性配置：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-disk.png" alt="ovm-disk"></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>BitTorrent 下载要配置一下，主要设置<code>Files and Locations</code> 设置一下下载目录就可以了。下载主界面要打开BitTorrent-&gt;RPC-&gt;Show</p><p>可以手动上传种子或者直接输入种子url或磁力链接，如果有peers的话，下载速度还是可以的。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/bittorrent.png" alt="bittorrent"></p><h4 id="Plex设置"><a href="#Plex设置" class="headerlink" title="Plex设置"></a>Plex设置</h4><p>打开 Plex多媒体服务，设置一下硬盘，其他设置要进入plex管理中心配置，首次进入要先申请一个账号，使用邮箱账户申请（其他账号要FQ嘛），登录进行简单的配置就可以了</p><p>要注意的是它的电影目录、电视剧目录、音乐目录都要分开，不要把电视剧和电影放在一个目录，要不然就不能正确显示海报了，因为plex获取电影海报和电视剧海报的服务器好像是不同的，所以我们在下载的时候最好就区分好，电影下载到电影的目录，电视剧下载到电视剧目录。</p><p>电视上安装Kodi+Plex插件 就可以愉快的看电影和电视剧了，悠哉！</p><h2 id="外部访问"><a href="#外部访问" class="headerlink" title="外部访问"></a>外部访问</h2><p>上面配完之后，只能在局域网内进行操作，当然不能仅限于此，我们也要能在外网访问才对嘛。<br>上一篇文章我已经写了如何配置FRP进行内网穿透，树莓派的配置也同理。（我假设你服务端都已经配置好了）</p><p>首页看一下树莓派的系统是几位的：</p><p><code>getconfig LONG_BIT</code> 显示32，那我们就下32位的包。</p><p><code>frp_0.20.0_linux_arm.tar.gz</code></p><p>配置不多讲了，<code>./frpc -c ./frpc.ini</code> 启动之后，便可以在外网访问OVM的管理后台了。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/ovm-frp.png" alt="ovm-frp"></p><p>PS：如果你的VPS服务器有防火墙的话，记得去开放一下端口哦！！</p><p>Plex的端口开放有的多，具体的Frp配置，看我下面的:</p><p>服务端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[range:flextcp]<br>type = tcp<br>listen_port = 32400,32443,32469<br>[range:flexudp]<br>type = udp<br>listen_port = 1900,5353,32410,32412-32414<br></code></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[range:flextcp]                          <br>type = tcp                               <br>local_ip = 127.0.0.1                     <br>local_port = 32400,32443,32469           <br>remote_port = 32400,32443,32469          <br>                                         <br>[range:flexudp]                          <br>type = udp                               <br>local_ip = 127.0.0.1                     <br>local_port = 1900,5353,32410,32412-32414 <br>remote_port = 1900,5353,32410,32412-32414<br></code></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> openmediavault </tag>
            
            <tag> 媒体中心 </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>揭秘“合成氢动力水”</title>
      <link href="/2018/07/24/qingdonglishui/"/>
      <url>/2018/07/24/qingdonglishui/</url>
      <content type="html"><![CDATA[<p>最近朋友圈合成氢能源挺火的，我是不太相信的，所以特地去查了一些资料。当我查到入会费2980成为代理之后才可购买时，我就呵呵了，我又查了一下他们的盈利机制:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">一：全返奖励一个人都不推，交2980，返还2980，每日以积分的形式释放。推一个人，返还2980乘以2推荐两个人，返还2980乘以4推荐三个人，返还2980乘以6，6倍截止<br><br>二：晋级奖励一个人只需推荐两个人，如A和B，当AB两条线累计各达到六人，每月拿五千七固定工资。当AB两条线累计各达到十八人，每月拿一万一千七百固定工资。以此类推，最高每月拿117万。<br></code></pre></td></tr></table></figure><a id="more"></a><p>拿人头，发展下线，拿提成——–传销无疑！！！</p><p>前几天还有朋友跟我说只要4块钱一升，有不少人都在加，动力足，对车无损坏，真的无损伤吗？呵呵</p><p>我找了找资料，在网上翻到了一个记者调查视屏：</p><video data-src="http://pbmsgh6d0.bkt.clouddn.com/%E5%90%88%E6%88%90%E6%B0%A2%E5%8A%A8%E5%8A%9B%E6%B0%B4.mp4" poster="http://vimg3.ws.126.net/image/snapshot/2018/4/O/I/VDDGU4HOI.jpg" webkit-playsinline="" controls="true" src="http://pbmsgh6d0.bkt.clouddn.com/%E5%90%88%E6%88%90%E6%B0%A2%E5%8A%A8%E5%8A%9B%E6%B0%B4.mp4" style="width:100%"><br></video><p>根据视屏的说法并结合我在朋友圈看到的图片，（无色类似纯水）应该是甲醇勾兑蒸馏水之类的产品。</p><p>科普一下知识：</p><h3 id="甲醇基本知识"><a href="#甲醇基本知识" class="headerlink" title="甲醇基本知识"></a>甲醇基本知识</h3><p>甲醇（Methanol，CH3OH）是结构最为简单的饱和一元醇，CAS号为67-56-1或170082-17-4，分子量为32.04，沸点为64.7℃。无色液体，俗称工业酒精，可同水进行完全互溶，甲醇燃料也被国家鼓励推广，为防止不法商人将甲醇进行勾兑流入市场形成酒类销售，故将甲醇燃料加入少量汽油，西方国家添加蓝色用做汽车燃料进行防范。</p><p>同时，甲醇可用作清洗去油剂，MOS级主要用于分立器件，中、大规模集成电路，BV-Ⅲ级主要用于超大规模集成电路工艺技术。</p><p>通常甲醇是一种比乙醇更好的溶剂，可以溶解许多无机盐。亦可掺入汽油作替代燃料使用。20世纪80年代以来，甲醇用于生产汽油辛烷值添加剂甲基叔丁基醚、甲醇汽油、甲醇燃料，以及甲醇蛋白等产品，促进了甲醇生产的发展和市场需要。</p><p>甲醇不仅是重要的化工原料，而且还是性能优良的能源和车用燃料。甲醇与异丁烯反应得到MTBE（甲基叔丁基醚），它是高辛烷值无铅汽油添加剂，亦可用作溶剂。除此之外，还可制烯烃和丙烯，解决资源短缺问题。</p><p>甲醇可用于生产二甲醚，二甲醚除了在日用化工、制药、农药、染料、涂料等方面有广泛的用途，还具有方便清洁、十六烷值高、动力性能好、污染少。易加压为液体、易储存等燃料性能。甲醇和二甲醚按一定比例配制而成的新型液体燃料称为醇醚燃料。它的燃烧效率和热效率均高于液化气。</p><p>由于甲醇具有沸点低辛烷值高等特点，使得它作为燃料具有含氧量高、热值比汽油弱的特点，汽化潜热是汽油的3倍多。同时，由于甲醇燃料理化性能接近汽油，在汽油机上使用甲醇燃料，发动机不需做大的变动，甲醇与汽油相溶性较好，可实现各种比例掺烧。而且几十万吨/年的装置就可达到经济规模（合成油则至少应达到几百万吨/年规模），甲醇可以不必过分集中生产，便于企业投资兴建和产品输送，即使较长距离的输送，也比输煤和输气便利。再加上它是含氧化合物，燃烧完全，在汽车发动机中的能量利用效率高于汽油，其经济性很具有竞争力。</p><h4 id="甲醇燃料的优点："><a href="#甲醇燃料的优点：" class="headerlink" title="甲醇燃料的优点："></a>甲醇燃料的优点：</h4><p>节省石油、安全方便、动力性好、减少排放</p><h4 id="甲醇燃料的缺点："><a href="#甲醇燃料的缺点：" class="headerlink" title="甲醇燃料的缺点："></a>甲醇燃料的缺点：</h4><p>甲醇的汽化潜热高，易造成甲醇燃料的低温起动性能差，冬天需要采取相应措施；</p><p>甲醇与汽油混合形成共沸物，在甲醇15%配比附近甲醇汽油蒸汽压显著提高，当环境气温较高时甲醇汽油在油路中容易形成气阻，造成汽车供油不畅；</p><p>甲醇不完全燃烧易形成非常规污染排放物，其中甲醛的排放比常规汽油车排放高，容易造成汽车三元催化器中毒；</p><p>由于甲醇热值只有汽油一半不到，因此使用中、大比例甲醇汽油的汽车动力性能会受影响。</p><p>甲醇具有腐蚀性，对橡胶有溶胀作用，因此将甲醇汽油中往往要加入抗腐蚀、抗溶胀的添加剂；</p><p>甲醇是优良溶剂，进入汽缸后会破坏缸壁油膜，容易造成汽缸壁——活塞环摩擦副的异常磨损；</p><p>甲醇不完全燃烧产物中含有酸性物质，易造成发动机润滑油提前酸化。</p><h3 id="什么是醇醚燃料？"><a href="#什么是醇醚燃料？" class="headerlink" title="什么是醇醚燃料？"></a>什么是醇醚燃料？</h3><p>甲醇+水（蒸馏水）+催化剂 ==形成醇醚燃料<br>醇醚燃料就是由煤（包括原煤、煤层气、焦炉煤气等）通过气化合成低碳含氧燃料——甲醇、二甲醚（简称醇醚燃料）等车用清洁替代汽油、柴油的燃料。包括甲醇燃料、二甲醚燃料。</p><h4 id="醇醚燃料特点"><a href="#醇醚燃料特点" class="headerlink" title="醇醚燃料特点"></a>醇醚燃料特点</h4><p>甲醇作为燃料始于上世纪七十年代的两次石油危机之后，其特点首先是完全的可替代性。</p><p>甲醇燃料是理化性能接近汽柴油的液体燃料，使用方便，辛烷值高，相当于112。</p><p>甲醇比汽油安全、环保；可做实验；气罐高压缩气体，爆炸是炸药的6倍，气罐进空气超过一定量也爆炸；甲醇液体、常压，并可用水稀释，最坏是着火而不是爆炸。</p><p>只要是电喷汽油车都可以改智能双燃料控制（3～12缸都可以）！或烧天然气车都可以烧甲醇！甲醇汽车迎来发展春天，必须专业改装！比气安全动力好、更省、续航能力强，改装方案多等优点。</p><p>甲醇汽车改装，甲醇燃料市面上99%都是简易改装，车烧甲醇不是加个所谓的控制器就是甲醇汽车改装，要不车厂早就自己加上了。甲醇如果简单的勾兑就可以使用，那3桶油早就做了。</p><p>必须专业改装智能汽车双燃料控制系统，要不必定导致汽车严重损坏。</p><p>加注甲醇燃料需注意以下事项：</p><p>甲醇（水性导电能力强，汽油导电差。车烧甲醇必须用耐水油泵、液位器！甲醇避免被酸性、腐蚀性液体污染（罐车只做水清洗，不做蒸灌处理）。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>甲醇燃料是可以加的，但是无损吗？如果你的汽车没有按照甲醇使用进行正确改装的话，100%告诉你肯定会有损害的，对于普通汽车来说，使用低比例成品油无须对发动机和装置进行改造，可直接使用，但是朋友圈这种“合成氢动力水”甲醇含量高达85%以上，必须对汽车的燃油系统进行改造。甲醇燃料会对未进行改造的汽车燃油系统产生腐蚀效果，影响汽车寿命！我们平常喝97#汽油的车子如果长期加92#的话都会产生影响，更何况换了一种全新的燃料呢？后果就是就跟我们人一样，消化不良，发动机缸裂，燃料在机箱里面燃烧不正常，对汽车造成不可逆的损害,想去加这个的，悠着点吧！！！</p>]]></content>
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 合成氢动力水 </tag>
            
            <tag> 汽车新型燃料 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>内网穿透利器FRP</title>
      <link href="/2018/07/23/frp/"/>
      <url>/2018/07/23/frp/</url>
      <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">Frp</a> 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。</p><p>还有一个内网穿透工具叫做Ngrok，提供同样的功能，但是Frp使用更简单。</p><h2 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h2><p>一台VPS(我的是Google VM实例，系统Debian 8 64位)</p><p>一个域名,可选，最好有比如 abc.com，要不然得用ip来进行访问了</p><a id="more"></a><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="域名设置-可选"><a href="#域名设置-可选" class="headerlink" title="域名设置[可选]"></a>域名设置[可选]</h3><p>域名配置是可选的，不配置也没关系，但是为了方便访问，还是配置一个比较好，去域名商控制台绑定一个二级域名就可以，假设域名叫做abc.com, 要设置的二级域名叫做frp.abc.com,新增两条A记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">A   frp.abc.com     **.**.**.** (ip)<br>A   *.frp.abc.com   **.**.**.** (ip)<br></code></pre></td></tr></table></figure><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p><a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">下载地址</a> 找一个适合自己vps的安装包，我选择的是<code>frp_0.20.0_linux_amd64.tar.gz</code></p><p>复制安装包的地址，在vps上输入：</p><p><code>wget https://github.com/fatedier/frp/releases/download/v0.20.0/frp_0.20.0_linux_arm64.tar.gz</code> 进行安装包的下载</p><p>然后解压缩：</p><p><code>tar -zxvf frp_0.20.0_linux_arm64.tar.gz</code></p><p><code>cd frp_0.20.0_linux_arm64.tar.gz</code></p><p>目录里面应该有这些内容：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/frp-dir.png" alt="Frp"></p><p>配置 frps.ini 文件</p><p><code>vim frps.ini</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[common]<br>bind_port = 7000<br>vhost_http_port = 80<br>vhost_https_port = 443<br>dashboard_port = 8088<br>dashboard_user = 用户名<br>dashboard_pwd = 密码<br>privilege_token = token<br>log_file = ./frps.log<br>log_level = info<br>[web1]<br>type = http<br>custom_domains = web1.abc.com<br>auth_token = token<br></code></pre></td></tr></table></figure><p>用户名、密码、token自行填写,[web1] 名字任意，但是客户端配置的时候必须跟服务器是一致的，这里写web1的话，客户端配置中也得写web1，custom_domains 也任意，同理服务端和客户端也必须一致。</p><p>启动服务：</p><p><code>sudo nohup ./frps -c ./frps.ini &amp;</code></p><p>因为vhost_http_port 和 vhost_https_port 我们绑定的是1024 以下的端口，所以必须要有root权限，否则会报permission deney的错误。</p><p>开启自启动：</p><p><code>vim /etc/rc.local</code></p><p>在 exit 0 之前增加：</p><p><code>sudo nohup /home/luofeng0603/frp_0.20.0_linux_amd64/frps -c /home/luofeng0603/frp_0.20.0_linux_amd64/frps.ini &amp;</code></p><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>还是去上面那个下载地址，选择适合自己的客户端，比如我的windows我下的这个：</p><p><code>frp_0.20.0_windows_amd64.zip</code></p><p>解压缩：</p><p>目录里面应该是这些内容：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/frp-win.png" alt="frp-win"></p><p>编辑 frpc.ini 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[common]<br>server_addr = VPS的IP<br>server_port = 7000<br>privilege_token = 服务端token<br>login_fail_exit = false<br><br>[ssh]<br>type = tcp<br>local_ip = 127.0.0.1<br>local_port = 22<br>remote_port = 6000<br><br>[web1]<br>type = http<br>local_port = 80<br>custom_domains = web1.frp.abc.com<br>auth_token = web1的token<br></code></pre></td></tr></table></figure><p>server_addr：   填写vips的IP地址</p><p>privilege_token： 填写服务端token</p><p>web1：  名字和服务端一致</p><p>local_port：    填写你本地web服务器的端口</p><p>cutom_domains：     和服务端一致</p><p>auth_token：        和服务端一致</p><p>配置完毕，进行启动，在frp目录中打开windows命令行工具：</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/frp-win-success.png" alt="frp-win-success">;</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动本地Wamp服务器，在浏览器中输入：<code>web1.frp.abc.com</code>  成功打开wamp Info页面。</p>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FRP </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>html5shiv.js和respond.js</title>
      <link href="/2018/07/21/respond/"/>
      <url>/2018/07/21/respond/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;在html页面中经常看到引入了下面两个文件：</p><pre><code>&lt;script src=&quot;./js/html5shiv.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;./js/respond.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>&emsp;&emsp;其中 html5shiv 可以让不支持html5的浏览器支持html5的新增标签，<em>IE 9</em> 支持html5，但是其以下的并不支持。</p><p>&emsp;&emsp;respond.js 是一个快速轻量的 <em>polyfill</em> ， 用来为 IE6-8 以及其他不支持 CSS3 媒体查询的浏览器提供 <em>min-width</em> 和 <em>max-width</em> 特性，实现响应式网页设计。</p>]]></content>
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js中!的神奇作用</title>
      <link href="/2018/07/20/js!/"/>
      <url>/2018/07/20/js!/</url>
      <content type="html"><![CDATA[<h2 id="JS中！的神奇作用"><a href="#JS中！的神奇作用" class="headerlink" title="JS中！的神奇作用"></a>JS中！的神奇作用</h2><p>&emsp;&emsp;今天翻阅别人的源代码的时候，看到一个神奇的用法。</p><p>&emsp;&emsp;<code>!function ($){...}(jQuery)</code></p><p>&emsp;&emsp;!正常来讲是一元操作符非，作者为何在一个函数前面加个非呢？为此我去翻阅了一些资料，发现其中还是有一些门道的。<br><a id="more"></a><br>&emsp;&emsp;js中匿名函数的一般用法是下面两种：</p><pre><code>(function(){alert(&apos;a&apos;);})();(function(){alert(&apos;a&apos;);}());</code></pre><p>&emsp;&emsp;是用括号来实现的，如果你写成下面这样的话，是无法执行的：</p><pre><code>function(){alert(&apos;a&apos;)}();</code></pre><p>&emsp;&emsp;因为这个代码把js解释器搞混了，前面function(){alert(‘a’)} 是函数声明，要调用申明的函数必须使用<code>a();</code>这种形式，所以自然无法执行。</p><p>&emsp;&emsp;而括号将一个函数声明转化成了一个表达式，解析器不再以函数声明的方式处理函数a，而是作为一个函数表达式处理。</p><p>&emsp;&emsp;所以<code>(function(){alert(&#39;a&#39;);})();</code>在js眼里等同于:</p><pre><code>var a = function(){alert(&apos;a&apos;);};a();</code></pre><p>&emsp;&emsp;知道这个就好理解了，<strong>其实任何能让一个函数申明变成函数表达式的符号，都可以替代()的作用。</strong>! 就是其中一个，当然，聪明的你肯定也想到了，+-等等也是可以的。</p><pre><code>!function(){alert(&apos;a&apos;);}();+function(){alert(&apos;a&apos;);}();-function(){alert(&apos;a&apos;);}();~function(){alert(&apos;a&apos;);}();</code></pre><p>&emsp;&emsp;至于作者为什么要用!而不是其他符号呢？这个有人解释可能更多的是一种习惯问题，最正常的写法还是使用 (), ! 可能让人看代码的时候更容易理解吧，另外可以少些一个字符（然而并没有什么卵用）。</p>]]></content>
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo搭建个人博客系列(一)：安装</title>
      <link href="/2018/07/11/hexo1/"/>
      <url>/2018/07/11/hexo1/</url>
      <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作:"></a>准备工作:</h2><p><code>以下所有工作，环境默认Win10</code></p><ul><li>安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li>安装 <a href="http://cmder.net/" target="_blank" rel="noopener">Cmder完整版</a> 或者安装 <a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git for Window</a></li><li>注册 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 并新建Gitpage专用仓库</li><li>安装 <a href="https://hexo.io/" target="_blank" rel="noopener">安装Hexo</a></li></ul><a id="more"></a><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤:"></a>具体步骤:</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h3><p>进入官网下载稳定版本</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/download-node.png" alt="download node.js"></p><p>安装很简单，一路next</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/run-node.png" alt="run-node"></p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/install-node.png" alt="install-node"></p><p>安装完成之后，检测一下,出现下图版本提示，就是成功了</p><blockquote><p>node –version</p></blockquote><p><img src="http://pbmsgh6d0.bkt.clouddn.com/node-version.png" alt="node-version"></p><p>测试一下npm是否安装成功，npm是Node包管理工具，安装node的时候是默认集成的，出现下图提示就是成功的</p><blockquote><p>npm -v</p></blockquote><p><img src="http://pbmsgh6d0.bkt.clouddn.com/npm-version.png" alt="npm-version"></p><p>npm默认源在国外，速度很慢，可以换成国内淘宝镜像源</p><blockquote><p>npm config set registry <a href="http://registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a></p></blockquote><h3 id="安装-Cmder完整版-或者安装-Git-for-Window"><a href="#安装-Cmder完整版-或者安装-Git-for-Window" class="headerlink" title="安装 Cmder完整版 或者安装 Git for Window"></a>安装 <a href="http://cmder.net/" target="_blank" rel="noopener">Cmder完整版</a> 或者安装 <a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git for Window</a></h3><p><code>Cmder 是Windows下一款很好的命令行工具，用来替代Windows自带的cmd是再好不过了，支持Linux下的绝大部分命令，完整版集成了git，方便使用。</code></p><p>官网下载<br><img src="http://pbmsgh6d0.bkt.clouddn.com/download-cmder.png" alt="download-cmder"></p><p>无需安装，解压之后即可使用<br><img src="http://pbmsgh6d0.bkt.clouddn.com/cmder-dir.png" alt="cmder-dir"></p><p>[可选操作]：</p><ol><li><p>添加至环境变量：Win + R 输入cmder 即可打开</p><p> <img src="http://pbmsgh6d0.bkt.clouddn.com/cmder-home.png" alt="cmder-home"></p><p> <img src="http://pbmsgh6d0.bkt.clouddn.com/cmder-path.png" alt="cmder-path"></p></li><li><p>添加至右键菜单：右击 Windows 图标，选择命令提示符(管理员)</p><p> <img src="http://pbmsgh6d0.bkt.clouddn.com/win-rightclick.png" alt="win-rightclick"></p><p> 进入cmder目录<br> 输入：</p><blockquote><p>Cmder.exe /REGISTER ALL</p></blockquote><p> <img src="http://pbmsgh6d0.bkt.clouddn.com/cmder-rightmouse.png" alt="cmder-rightmouse"></p></li></ol><h3 id="注册Github-并新建仓库"><a href="#注册Github-并新建仓库" class="headerlink" title="注册Github 并新建仓库"></a>注册<a href="https://github.com/" target="_blank" rel="noopener">Github</a> 并新建仓库</h3>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IKBC POKER 最适合程序员的键位编程</title>
      <link href="/2018/07/10/ikbc-poker/"/>
      <url>/2018/07/10/ikbc-poker/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;我对机械键盘的印象还一直停留在打游戏，一般打游戏才用机械键盘吧，游戏用黑轴，这个我还是知道的，不过写代码有必要用机械键盘吗？</p><p>&emsp;&emsp;同事推荐入坑IKBC，樱桃轴，价钱适中，在试用了同事的IKBC 青轴几天之后，果断觉得再也不想用回薄膜键盘了，手感差的也太大了吧？！<br><a id="more"></a><br>&emsp;&emsp;不过他的青轴有点不太适合我：</p><ul><li>81键，略大，自带钢板，很重，不方便携带</li><li>青轴键程偏长，写代码久了有点儿累</li><li>声音略大，时间长了有点烦人</li><li>键线不分离</li><li>不支持自定义编程</li></ul><p>在另外一个同事的安利下，入了IKBC POKER 茶轴，小巧轻便，键线分离，键程适中，长时间写代码也不会觉得很累，61键，支持自定义编程。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/20160721200123668.png" alt="ikbc poker"></p><p>写代码当然要先编一下适合自己的键啦~</p><p>我的手略大，双手自然放置在键盘上的时候，右手稍微往右上移一下，小鱼际正好能搁在PN键位上。</p><p><img src="http://pbmsgh6d0.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180710184721.png" alt="小鱼际"></p><h2 id="具体键位编程："><a href="#具体键位编程：" class="headerlink" title="具体键位编程："></a>具体键位编程：</h2><ul><li>FN + W : 上</li><li>FN + S : 下</li><li>FN + A : 左</li><li>FN + D : 右</li><li>FN + F : Ctl + 左</li><li>FN + G ：Ctl + 右</li><li>FN + R :  Home</li><li>FN + V : End</li><li>FN + T : PgUp</li><li>FN + B : PgDn</li><li>FN + Esc : `</li><li>FN + Shift : ~</li><li>FN + I : Backspace</li><li>FN + O : DEL</li><li>FN + Z : [</li><li>FN + X : ]</li></ul><h2 id="编程方法："><a href="#编程方法：" class="headerlink" title="编程方法："></a>编程方法：</h2><ol><li><code>FN + 右Ctl</code>，进入编程模式（空格右灯闪烁）</li><li>按想要编程的键（空格右灯长亮）</li><li>按编程内容，然后按一下PN（空格右灯再次闪烁）</li><li>重复2、3步骤可继续编程</li><li>按 <code>FN + 右Ctl</code> 退出编程模式</li></ol><p>刚开始可能会有点不适应，手老是不自觉的要去摸小键盘，熟悉之后就好多了，一个星期大概就能熟练了。我现在写代码，手基本上不用离开键盘的，非常方便。</p>]]></content>
      
      <categories>
          
          <category> 外设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 键盘 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;其实我是不想写博客的，因为我实在是太忙了（哦不，太懒了），有了孩子之后，留给自己的时间就更少了，本来以前晚上回去还能弄弄电脑，提升一下自我，现在基本上回家抱抱孩子，跟他玩一会就10点多了，年纪大了，一到11点就困的不行，所以真的是有心无力呀。</p><p> &emsp;&emsp;不过话又说回来，时间就像那啥,挤挤总是有的，更何况现在工作中遇到的坑实在是太多了，很多坑往往之前跳过，现在遇到了就是想不起来，又跳进去了，长此以往，累的够呛，真的是需要有一个博客存放我跳坑的经验呀！</p><p> &emsp;&emsp;关于到底在哪里写博客这个问题真是让我纠结了半天，作为一个程序猿，必须要写出自己的逼格呀，所以我最后选了<a href="https://pages.github.com/" target="_blank" rel="noopener">GitPage</a> 来写博客。</p><p> &emsp;&emsp;原因无他，可以装X，WordPress简单是简单，关键是不能体现我的逼格呀，哈哈，所以折腾了几天用Hexo弄了这个博客，其中也是一把辛酸泪，好一顿折腾，具体去翻我的博文。</p><p> &emsp;&emsp;我的工作涉及略杂，主要是php，主写各种后台，也写微信小程序，有的时候也写前端页面，谈不上哪一方向精通，但是各类技术都略有涉猎，平常见到新知识有时间就学习一下，不针对某个方面。</p><p> &emsp;&emsp;目前除了写代码，大部分时间贡献出来给我的Swtich了，公司程序猿基本人手一个，玩的都是2017年神作塞尔达，哈哈，就问你6不6？来张合照秀一下。<br><img src="http://pbmsgh6d0.bkt.clouddn.com/IMG_20180621_131604.jpg" alt="公司程序猿的switch"><br> &emsp;&emsp;花了几百块钱买了luofengblog.com这个域名，我是想既然花钱了，是不是应该珍惜一点，多坚持一下，不想弄博客，就是怕自己坚持不了，免费的东西总觉得来之太易不太容易坚持，希望花点钱且写且坚持，顺便锻炼一下写作！</p>]]></content>
    </entry>
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
